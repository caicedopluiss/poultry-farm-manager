name: CI

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    build-and-test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            # Node.js y dependencias frontend
            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "22"

            - name: Cache node_modules
              uses: actions/cache@v4
              with:
                  path: client/webapp/node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('client/webapp/package-lock.json') }}

            - name: Install frontend dependencies
              working-directory: client/webapp
              run: npm ci

            - name: Build frontend
              working-directory: client/webapp
              run: npm run build

            # .NET y dependencias backend
            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: "8.0.x"

            - name: Cache NuGet packages
              uses: actions/cache@v4
              with:
                  path: ~/.nuget/packages
                  key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json', '**/*.csproj', '**/*.sln') }}
                  restore-keys: |
                      ${{ runner.os }}-nuget-*

            - name: Restore backend dependencies
              working-directory: . # root (sln file location)
              run: dotnet restore

            - name: Build backend
              working-directory: . # root (sln file location)
              run: dotnet build --configuration Release --no-restore

            # Tests backend
            - name: Run backend tests
              working-directory: . # root (sln file location)
              run: dotnet test --no-build --no-restore --configuration Release

            # Tests frontend (descomenta si tienes tests de frontend)
            # - name: Run frontend tests
            #   working-directory: client/webapp
            #   run: npm run test
